#+TITLE: 加快Emacs的运行速度
#+DATE: <2016-12-13 Tuesday 13:53:19>
#+TAGS: Emacs
#+PERMALINK: 加快Emacs的运行速度
#+VERSION: 0.1
#+CATEGORIES: Emacs
#+LAYOUT: post
#+AUTHOR: yyangdid
#+EMAIL: yyangdid@gmail.com
#+COMMENTS: yes
#+BEGIN_QUOTE
此方法可以加快 Emacs 的运行速度，而不是启动速度。其实就是把 Emacs 的配置文件
=.emacs.d= 文件夹放到内存中，而内存的吞吐速度要比普通的机械硬盘快的多，相应的
emacs 的速度也会有很大提升。
#+END_QUOTE
#+BEGIN_HTML
<!--more-->
#+END_HTML
#+BEGIN_QUOTE
此方法只在 Linux 系统中测试了，个人系统 =openSUSE42.2=
#+END_QUOTE
* 配置
1. 将下面一行插入到 =/etc/fstab= 中，然后重启电脑（我电脑是 8G 内存，size 设置为 1G 了）。
#+BEGIN_SRC sh
tmpfs       /tmp        tmpfs       nodev,nosuid,size=1G    0   0
#+END_SRC
2. 新建一个脚本，并且赋予可执行权限，可以命名为 =emacs2ram= ，内容如下:
#+BEGIN_SRC sh
#!/bin/sh

if [ -z "$1" ];then
    echo "Usage:"
    echo "  emacs2ram start"
    echo "  emacs2ram restore"
    exit 1
fi

if [ "$1" == "start" ];then
    backup=.emacs.d-backup
    link=.emacs.d
    volatile=/tmp/.emacs.d-$USER

    IFS=
    set -efu

    cd ~/

    if [ ! -r $volatile ]; then
        mkdir -m0700 $volatile
    fi

    # link -> volatie does not exist
    if [ "$(readlink $link)" != "$volatile" ]; then
        # backup project at first
        mv $link $backup
        # create the link
        ln -s $volatile $link
    fi

    if [ -e $link/.unpacked ]; then
        echo "Sync .emacs.d from memory to backup ..."
        rsync -avq --delete --exclude .unpacked ./$link/ ./$backup/
        echo "DONE!"
    else
        echo "Sync .emacs.d from disk to memory ..."
        rsync -avq ./$backup/ ./$link/
        touch $link/.unpacked
        echo "DONE!"
    fi
else
    echo "Moving .emacs.d back to disk ..."
    backup=.emacs.d-backup
    link=.emacs.d
    volatile=/tmp/.emacs.d-$USER
    cd ~/
    rm -f $link && mv $backup $link && rm -rf $volatile
    echo "DONE!"
fi

#+END_SRC
=emacs2ram= 文件：
- [[https://github.com/yyangdid/blog-backup/blob/master/MyFiles/Emacs/emacs2ram][github]]
- [[https://coding.net/u/yyangdid/p/blog-backup/git/blob/master/MyFiles/Emacs/emacs2ram][condig.net]]
* 使用
** load 到 =tmpfs=
进入脚本所在的目录执行：
#+BEGIN_SRC sh
emacs2ram start
#+END_SRC
会提示：
#+BEGIN_SRC sh
Sync .emacs.d from disk to memory ...
DONE!
#+END_SRC
说明配置文件已经转移到 =tmpfs= 了，ok！

可以用文件管理器看一下，在 =/tmp= 文件夹下会有一个 =.emacs.d-用户名= 的文件夹，
而主目录的 /.emacs.d/ 文件夹会变成一个软链接，指向 =/tmp/.emacs.d-用户名= ，同时
在主目录还会有一个 =.emacs.d-backup= 文件夹,是对原 =.emacs.d= 的备份。
** 还原
*** 不保留历史记录、对配置文件的更改。。。
进入脚本所在的目录执行：
#+BEGIN_SRC sh
emacs2ram restore
#+END_SRC
会提示：
#+BEGIN_SRC sh
Moving .emacs.d back to disk ...
DONE!
#+END_SRC

用文件管理器看一下， =/tmp/.emacs.d-用户名= 和 =~/.emacs.d-backup= 两文件夹已经
没了，而 =~/.emacs.d= 回来了，不是软链接了。
*** 保留历史记录、对配置文件的更改。。。
进入脚本所在的目录执行：
#+BEGIN_SRC sh
emacs2ram start
#+END_SRC
会提示：
#+BEGIN_SRC sh
Sync .emacs.d from memory to backup ...
DONE!
#+END_SRC
然后执行：
#+BEGIN_SRC sh
emacs2ram restore
#+END_SRC
会提示：
#+BEGIN_SRC sh
Moving .emacs.d back to disk ...
DONE!
#+END_SRC
ok!


执行 =emacs2ram start= 是把 =/tmp/.emacs.d-用户名= 的内容同步到
=~/.emacs.d-backup= 。


执行 =emacs2ram restore= 是把 =~/.emacs.d-backup= 同步到 =~/.eamcs.d= ，同时删除
=/tmp/.emacs.d-用户名= 和 =~/.emacs.d-backup= 。


#+BEGIN_QUOTE
此方法是在
[[https://github.com/lujun9972/emacs-document/blob/master/emacs-common/%E5%8D%81%E5%80%8D%E6%8F%90%E5%8D%87Emacs%E6%80%A7%E8%83%BD.org?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io][
开发者头条]]看到的，对原文的 =emacs2ram= 脚本修改了一下。如果觉得每次都要执行命令
麻烦，可以把命令加入开机启动和关机前执行，个人没折腾。
#+END_QUOTE
